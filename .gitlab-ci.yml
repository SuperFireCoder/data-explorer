include:
  - project: 'ecocommons-australia/operational-notes-and-scripts/ci-pipelines'
    file: '/v1/supported_ci_ui.yml'
    ref: develop

cypress test:
  extends: .npm
  tags:
   - k8dev
  image:
    name: cypress/browsers:node14.17.6-chrome100-ff98
    entrypoint: [""]
  stage: build
  variables:
    CYPRESS_EC_USER: SECURE
    CYPRESS_EC_PASS: SECURE
    #CYPRESS_EC_LOGIN_URL: 'https://auth.dev.ecocommons.org.au/auth/realms/ecocommons-dev/protocol/openid-connect/auth?client_id=localhost-client&redirect_uri=http%3A%2F%2Fapp%3A3000&response_mode=fragment&response_type=code&scope=openid'
    CYPRESS_API_JOB_MAN_DEV: 'https://api.job-manager.dev.ecocommons.org.au'
    CYPRESS_API_VIS_DEV: 'https://api.visualiser.dev.ecocommons.org.au'
    CYPRESS_BASE_URL: "http://127.0.0.1:3000"
    #CYPRESS_CACHE_FOLDER: "${CI_PROJECT_DIR}/cache/Cypress" 
    #DEBUG: cypress:network:*,
    #DEBUG: cypress:*,
    REPORTER_CONFIG: |
      {
        "reporterEnabled": "spec, cypress-sonarqube-reporter",
        "cypressSonarqubeReporterReporterOptions": {
          "mergeOutputDir": "./"
        }
      }
    CHOKIDAR_USEPOLLING: 1
  script:
    # TODO build this into a container.. see Git issue
    # TODO Hack because .babelrc { env: { "e2e": { "plugins": ["istanbul"] }}} is failing.. somewhere.
    - cp ./.babelrc.cypress ./.babelrc || true
    - cp ./.env.development ./.env.local
    - echo ${REPORTER_CONFIG} > ./reporter-config.json
    - npm ci --no-optional
    - npm i cypress-multi-reporters cypress-sonarqube-reporter @cypress/code-coverage istanbul-lib-coverage
    - npx cypress install
    #- npm run dev &
    - npx next telemetry disable
    - npm run build
    - npm run start &
    - npx wait-on $CYPRESS_BASE_URL
    - npx cypress run --spec "cypress/integration/*" --reporter cypress-multi-reporters --reporter-options configFile=reporter-config.json -b chrome 
    #- npx cypress run --spec "cypress/integration/*" --reporter cypress-sonarqube-reporter --reporter-options "mergeOutputDir=./" -b chrome 
  artifacts:
      when: always
      paths:
        - cypress-sonarqube-reports.all.xml
        - coverage/**
        - dist/**
        - cypress/result.xml
        - cypress/videos/**/*.mp4
        - cypress/screenshots/**/*.png
      expire_in: 1 day
  rules:
    - if: '$CI_PIPELINE_SOURCE =~ /push|web/'
    - exists:
        - cypress.json
      when: on_success
    - when: never