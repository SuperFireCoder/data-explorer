include:
  - project: 'ecocommons-australia/operational-notes-and-scripts/ci-pipelines'
    file: '/v1/supported_ci_ui.yml'
    ref: develop

include:
  - local: v1/.supported_ci.yml

variables:
  BUILD_ARGS: "--build-arg NPM_AUTHTOKEN=${CI_JOB_TOKEN} --build-arg NODE_ENV=production"
  TEST_ENV_FILE: ".env.development"
  NPM_CONFIG_CACHE: "$CI_PROJECT_DIR/.npm"

# cache:
#   key: ${CI_COMMIT_REF_SLUG}
#   paths:
#     - node_modules/
#     - .npm/
#     - .next/cache

.npm:
  before_script:
    - echo -e "@ecocommons-australia:registry=https://gitlab.com/api/v4/packages/npm/\n//gitlab.com/api/v4/packages/npm/:_authToken=${CI_JOB_TOKEN}" > .npmrc

unit test:
  extends: .npm
  image: node:12-alpine
  stage: unit test
  script:
    - npm ci --no-optional
    - npm test -- --colors --coverage --coverageDirectory=jest-coverage --reporters=default --reporters=jest-junit
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
  artifacts:
    reports:
      junit: junit.xml
    paths:
      - jest-coverage/**
  rules:
    # Run this if Jest is set up (either with JS or JSON config file), and previous steps completed successfully
    - if: '$CI_PIPELINE_SOURCE =~ /push|web/'
    - exists:
      - jest.config.js
      - jest.config.json
      when: on_success
    # Otherwise don't run this
    - when: never

build image:
  extends: .build image

cypress test:
  extends: .npm
  tags:
   - k8dev
  image:
    name: cypress/browsers:node14.17.6-chrome100-ff98
    entrypoint: [""]
  stage: build
  variables:
    CYPRESS_EC_USER: SECURE
    CYPRESS_EC_PASS: SECURE
    CYPRESS_API_JOB_MAN_DEV: 'https://api.job-manager.dev.ecocommons.org.au'
    CYPRESS_API_VIS_DEV: 'https://api.visualiser.dev.ecocommons.org.au'
    CYPRESS_BASE_URL: "http://127.0.0.1:3000"
    #CYPRESS_CACHE_FOLDER: "${CI_PROJECT_DIR}/cache/Cypress" 
    #DEBUG: cypress:network:*,
    REPORTER_CONFIG: |
      {
        "reporterEnabled": "spec, cypress-sonarqube-reporter",
        "cypressSonarqubeReporterReporterOptions": {
          "mergeOutputDir": "./"
        }
      }
    CHOKIDAR_USEPOLLING: 1
  script:
    - cp ./.env.development ./.env.local
    # TODO build this into a container.. see Git issue
    # TODO Hack because .babelrc { env: { "e2e": { "plugins": ["istanbul"] }}} is failing.. somewhere.
    - cp ./.babelrc.cypress ./.babelrc || true
    # Workaround for mergeOutputDir being ignored (and after_script causing issues with k8 runner).
    - alias cpreport='cp dist/cypress-sonarqube-reports.all.xml ./'
    ##
    - echo ${REPORTER_CONFIG} > ./reporter-config.json
    - npm ci --no-optional
    - npm i cypress-multi-reporters cypress-sonarqube-reporter @cypress/code-coverage istanbul-lib-coverage
    - npx cypress install
    - npx next telemetry disable
    - npm run build
    - npm run start &
    - npx wait-on $CYPRESS_BASE_URL
    - npx cypress run --spec "cypress/integration/*" --reporter cypress-multi-reporters --reporter-options configFile=reporter-config.json -b chrome && cpreport || (cpreport; exit 1)
  artifacts:
      when: always
      paths:
        - cypress-sonarqube-reports.all.xml
        - coverage/**
        - dist/**
        - cypress/result.xml
        - cypress/videos/**/*.mp4
        - cypress/screenshots/**/*.png
      expire_in: 1 day
  rules:
    - if: '$CI_PIPELINE_SOURCE =~ /push|web/'
    - exists:
        - cypress.json
      when: on_success
    - when: never

